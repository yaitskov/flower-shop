        
Posy:
  actAs: { Timestampable: ~ }
  columns:
-- это описание букета созданное клиентом и заказанное хотябы один раз
-- поэтому оно храниться в базе так как может понравить еще кому нибудь
    client_made: { type: boolean, notnull: true, default: false }
-- счетчик ссылок на букет из видов букетов
    numlinks: { type: integer, notnull: true, default: 0 }
-- название букета
    name: { type: string(100), notnull: true, unique: true }
-- пояснение, описание
    description: { type: string(3000) }
-- время размещения материала
    published_at: { type: timestamp, notnull: true }
-- время создания работы автором
    created_at: { type: timestamp, notnull: true }
-- метод формирования цены ( цена не указана, цена постоянная,
-- переменная
    price_type: { type: enum, values [ unknown, constant, variable ], notnull: true }
-- постоянная составляющая цены 
    const_price: { type: float, notnull: true, default: 0.0 }
-- переменная состовляющая для каждого компонента своя
-- путь к изображению иконки для букета
    icon: { type: string(255) }    
    publisher_id: { type: integer, notnull: true }
    author_id: { type: integer, notnull: true }    
    album_id: { type: integer, notnull: true }

  relations:
-- автор материала тот кто его выложил на сайт 
    SiteUser: { onDelete: CASCADE, local: publisher_id, foreign: id }
-- автор работы
    SiteUser: { onDelete: CASCADE, local: author_id, foreign: id }    
-- альбом фотографий букета
    PhotoAlbum: { onDelete: CASCADE, local: album_id, foreign: id }


-- вид букета ( из роз, свадебный )
-- один букет может быть в нескольких 
PosyView:
  columns:
    name: { type: string(100), notnull: true, unique: true }
    description: { type: string(3000) }
-- порядок группы в списке видов букетов
    grporder: { type: integer, notnull: true }

-- таблица связка нужна потому что один и тот же букет
-- може быть в разных категориях
PosyViewList:
  columns:
-- порядок букетов в группе
    itmorder: { type: integer, notnull: true }
    posy_id: { type: integer, notnull: true }
    posyview_id:  { type: integer, notnull: true }
  relations:
    Posy: { onDelete: CASCADE, local: posy_id, foreign: id }
    PosyView: { onDelete: CASCADE, local: posyview_id, foreign: id }

Measure:
  columns:
    name: { type: string(10), notnull: true, unique: true }
    logname: { type: string(255), notnull: true }
    
-- категораия товара ( искуственные цветы, открытки, горшки, почва, удобрения )
ProductCategory:
  actAs: { Timestampable: ~ }
  columns:
    is_flower: { type: boolean, notnull: true, default: false }
    name: { type: string(100), notnull: true, unique: true }
    description: { type: string(3000) }
    catorder: { type: integer, notnull: true, unique: true, range: [0,1000000] }
    created_at: { type: timestamp, notnull: true }
-- единица измерения 
    measure_id: { type: integer }
-- иконка категории товаров
    icon_id: { type: integer }
    publisher_id: { type: integer, notnull: true }
  relations:
    Measure: { onDelete: CASCADE, local: measure_id, foreign: id }
    Photo: { onDelete: SET NULL, local: icon_id, foreign: id }
    SiteUser: { local: publisher_id, foreign: id }
-- отношение цвет

Color:
  columns:
    name: { type: string(255), notnull: true, unique: true }
-- значение цвета в rgb
    rgbvalue: { type: string(6), notnull: true }

ColorList:

-- набор цветов    
ColorListElement:
  columns:
    color_id: { type: integer, notnull: true }
    list_id: { type: integer, notnull: true }
  relations:
    Color: { onDelete: CASCADE, local: color_id, foreign: id }
    ColorList: { onDelete: CASCADE, local: list_id, foreign: id }

-- чуствительность к солнцу    
SunSense:
  columns:
    name: { type: string(10), notnull: true, unique: true }
--     
Blossoming:
  columns:
    name: { type: string(10), notnull: true, unique: true }
    
Sex:
  columns:
    name: { type: string(10), notnull: true, unique: true }
    
--  товар
Product:
  actAs: { Timestampable: ~ }
  columns:
-- название товара ( горшок )
    name: { type: string(255), notnull: true }
-- описание
    description: { type: string(4000) }
-- производитель
    vendor: { type: string(255) }
-- кол-во товара
    amount: { type: integer, notnull: true, default: 0, range: [0,1000000] }
-- цена за ед. если null значит не извесна
    price: { type: float }
-- дата последнего поступления
    last_entrance: { type: timestamp, notnull: true }
-- здесь могу быть комнатные растения
    is_home_plant: { type: boolean, notnull: true }
-- требования к хранению ( дипазон температур, влажности, освещенность )
    temperature_range: { type: string(20), regexp: '/^[0-9]+-[0-9]+$/' }
-- время цветения постоянно, не цветет и диапазон
    blossoming_id: { type: integer }
    blossoming_start: { type: date }
    blossoming_end: { type: date }
--  солнце
    sun: { type: integer } 
-- переодичность полива
    sprinkling_period: { type: string(100) }
-- размеры ( у открыток a4 a5 ... )
    size: { type: string(30) }
-- вес
    weight: { type: float } 
-- требования к почве
    category_id: { type: integer, notnull: true }
    icon_id: { type: integer }
    album_id: { type: integer }        
    color_id: { type: integer }
    publisher_id: { type: integer, notnull: true }
  relations:
    SiteUser: { local: publisher_id, foreign: id }    
    SunSense: { local: sun, foreign: id }
    Blossoming: { local: blossoming_id, foreign: id }
    ProductCategory: { onDelete: CASCADE, local: category_id, foreign: id }
    PhotoAlbum: { onDelete: CASCADE, local: album_id, foreign: id }
    Photo: { onDelete: CASCADE, local: icon_id, foreign: id }
-- основной цвет     
    Color: { onDelete: CASCADE, local: color_id, foreign: id }

Season:
  columns:
    name: { type: string(40), notnull: true, unique: true }
-- отношение порядка зима, весна, лето, осень
    sorder: { type: integer, notnull: true, unique: true }

FaceUptime:
  columns:
    name: { type: string(10), notnull: true, unique: true }
    
-- отношение    

Flower:
  actAs: { Timestampable: ~ }
  columns:
    comment: { type: string(100) }

    howcare: { type: string(4000) }
    created_at: { type: timestamp, notnull: true }

    updated_at: { type: timestamp, notnull: true }

    legheight: { type: integer }

    price: { type: float }

    work_factor: { type: float, notnull: true, default: 1.0 }    

    sex: { type: integer } 

    start_age: { type: integer }
    end_age: { type: integer }

    amount: { type: integer, notnull: true, default: 0 }

    lowest_temperature: { type: integer }
    highest_temperature: { type: integer }

    uptime_measure: { type: integer } 
    uptime: { type: integer }
    season_start: { type: integer }
    season_end: { type: integer }
    album_id: { type: integer }
    icon_id: { type: integer }
    publisher_id: { type: integer, notnull: true }
    color_id: { type: integer }
    category_id: { type: integer, notnull: true }
  relations:
    FaceUptime: { local: uptime_measure, foreign: id }
    ProductCategory: { local: category_id, foreign: id }
    Sex: { local: sex, foreign: id }
-- сезон цветения / когда есть в продаже
    Season: { onDelete: CASCADE, local: season_start, foreign: id }    
    Season: { onDelete: CASCADE, local: season_end, foreign: id }    
    PhotoAlbum: { onDelete: CASCADE, local: album_id, foreign: id }
    Photo: { onDelete: CASCADE, local: icon_id, foreign: id }
    SiteUser: { onDelete: CASCADE, local: publisher_id, foreign: id }
    Color: { onDelete: CASCADE, local: color_id, foreign: id }    

--состав букета из цветов    
FlowerPosy:
  columns:
-- кол-во цветка в букете
    amount: { type: integer }
    flower_id: { type: integer, notnull: true }
    posy_id: { type: integer, notnull: true }    
  relations:
    Flower: { onDelete: CASCADE, local: flower_id, foreign: id }
    Posy: { onDelete: CASCADE, local: posy_id, foreign: id }

-- остальные элементы входящие в букет ( ленты, фольга и тд)
UsedProducts:
  columns:
-- кол-во на один букет
    amount: { type: integer }
    product_id: { type: integer }
    posy_id: { type: integer }
  relations:
    Product: { onDelete: CASCADE, local: product_id, foreign: id }
    Posy: { onDelete: CASCADE, local: posy_id, foreign: id }

    
-- заказы клиентов
Orders:
  actAs: { Timestampable: ~ }
  columns:
-- номер заказа 
    number: { type: string(40), notnull: true, unique: true }
-- когда заказ принят ( клиент только что заказал )
    ordered_at: { type: timestamp, notnull: true }
-- срок к котору требуется выполнить заказ
    deadline: { type: timestamp, notnull: true }
-- время принятия заказа
    accepted_at: { type: timestamp }
-- время когда заказ стал готов
    completed_at: { type: timestamp }
-- заказ отменен
    canceled_at: { type: timestamp }    
    cancel_description: { type: string(255) }
-- информация о заказе требования клиента
    client_requirements: { type: string(4000) }
-- информация о клиенте
-- телефон
    client_phone: { type: string(50), notnull: true }
-- фамилия имя отчество
    client_name: { type: string(100), notnull: true }
--
    client_email: { type: string(100) }
-- сумма заказа без учета скидок в рублях
    order_amount: { type: float, notnull: true }
    client_id: { type: integer }
    responsible_id: { type: integer }
    posy_id: { type: integer, notnull: true }
  relations:
-- если зарегистрированный клиент
    SiteUser: { onDelete: CASCADE, local: client_id, foreign: id }
-- ответственный за выполение заказа тот кто его принял и начал вязать букет
    SiteUser: { onDelete: CASCADE, local: responsible_id, foreign: id }
-- готовый букет либо букет собранный в конструкторе самим клиентом 
    Posy: { onDelete: CASCADE, local: posy_id, foreign: id }
    
-- для форума темы, сообщения, прикрепленные документы
ForumTheme:
  actAs: { Timestampable: ~ }
  columns:
-- заголовок темы / вопроса
    name: { type: string(255), notnull: true }
    created_at: { type: timestamp, notnull: true }
-- тема важная и постоянная всегда весит вышие обычных тем
-- если не null. Если не null значит порядок среди таких же тем
    pinned_order: { type: integer }
-- тема заморожена и в нее нельзя добавлять сообщения всем кроме администраторов
    freezed: { type: boolean, notnull: true, default: false }
    author_id: { type: integer, notnull: true }
  relations:
    SiteUser: { onDelete: CASCADE, local: author_id, foreign: id }

ForumPost:
  actAs: { Timestampable: ~ }
  columns:
    body: { type: string(8000), notnull: true }
    created_at: { type: timestamp, notnull: true }
    author_id: { type: integer, notnull: true }    
  relations:
    SiteUser: { onDelete: CASCADE, local: author_id, foreign: id }
    
-- объявления
-- вопросы/ответы или статьи
--таблица дежурств чтобы знать кому отправлять смс или письма с уведомлением
-- о том чтобы приступить к выполнение работ


