<?php

/**
 * BaseColor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $rgbvalue
 * @property Doctrine_Collection $ColorListElement
 * @property Doctrine_Collection $Product
 * @property Doctrine_Collection $Flower
 * 
 * @method string              getName()             Returns the current record's "name" value
 * @method string              getRgbvalue()         Returns the current record's "rgbvalue" value
 * @method Doctrine_Collection getColorListElement() Returns the current record's "ColorListElement" collection
 * @method Doctrine_Collection getProduct()          Returns the current record's "Product" collection
 * @method Doctrine_Collection getFlower()           Returns the current record's "Flower" collection
 * @method Color               setName()             Sets the current record's "name" value
 * @method Color               setRgbvalue()         Sets the current record's "rgbvalue" value
 * @method Color               setColorListElement() Sets the current record's "ColorListElement" collection
 * @method Color               setProduct()          Sets the current record's "Product" collection
 * @method Color               setFlower()           Sets the current record's "Flower" collection
 * 
 * @package    donbuket
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseColor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('color');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('rgbvalue', 'string', 6, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 6,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ColorListElement', array(
             'local' => 'id',
             'foreign' => 'color_id'));

        $this->hasMany('Product', array(
             'local' => 'id',
             'foreign' => 'color_id'));

        $this->hasMany('Flower', array(
             'local' => 'id',
             'foreign' => 'color_id'));
    }
}