<?php

/**
 * BaseForumTheme
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property timestamp $created_at
 * @property integer $pinned_order
 * @property boolean $freezed
 * @property integer $author_id
 * @property SiteUser $SiteUser
 * 
 * @method string     getName()         Returns the current record's "name" value
 * @method timestamp  getCreatedAt()    Returns the current record's "created_at" value
 * @method integer    getPinnedOrder()  Returns the current record's "pinned_order" value
 * @method boolean    getFreezed()      Returns the current record's "freezed" value
 * @method integer    getAuthorId()     Returns the current record's "author_id" value
 * @method SiteUser   getSiteUser()     Returns the current record's "SiteUser" value
 * @method ForumTheme setName()         Sets the current record's "name" value
 * @method ForumTheme setCreatedAt()    Sets the current record's "created_at" value
 * @method ForumTheme setPinnedOrder()  Sets the current record's "pinned_order" value
 * @method ForumTheme setFreezed()      Sets the current record's "freezed" value
 * @method ForumTheme setAuthorId()     Sets the current record's "author_id" value
 * @method ForumTheme setSiteUser()     Sets the current record's "SiteUser" value
 * 
 * @package    donbuket
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseForumTheme extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('forum_theme');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('pinned_order', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('freezed', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SiteUser', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}