<?php

/**
 * BaseSiteUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $login
 * @property string $email
 * @property string $firstname
 * @property string $lastname
 * @property string $patronymic
 * @property string $personal_phone
 * @property string $employee_phone
 * @property boolean $is_blogger
 * @property string $signature
 * @property boolean $is_client
 * @property float $discount
 * @property string $password
 * @property boolean $is_root
 * @property timestamp $registered_at
 * @property boolean $is_employee
 * @property timestamp $last_login_at
 * @property integer $face_id
 * @property Photo $Photo
 * @property Doctrine_Collection $Posy
 * @property Doctrine_Collection $ProductCategory
 * @property Doctrine_Collection $Product
 * @property Doctrine_Collection $Flower
 * @property Doctrine_Collection $Orders
 * @property Doctrine_Collection $ForumTheme
 * @property Doctrine_Collection $ForumPost
 * 
 * @method string              getLogin()           Returns the current record's "login" value
 * @method string              getEmail()           Returns the current record's "email" value
 * @method string              getFirstname()       Returns the current record's "firstname" value
 * @method string              getLastname()        Returns the current record's "lastname" value
 * @method string              getPatronymic()      Returns the current record's "patronymic" value
 * @method string              getPersonalPhone()   Returns the current record's "personal_phone" value
 * @method string              getEmployeePhone()   Returns the current record's "employee_phone" value
 * @method boolean             getIsBlogger()       Returns the current record's "is_blogger" value
 * @method string              getSignature()       Returns the current record's "signature" value
 * @method boolean             getIsClient()        Returns the current record's "is_client" value
 * @method float               getDiscount()        Returns the current record's "discount" value
 * @method string              getPassword()        Returns the current record's "password" value
 * @method boolean             getIsRoot()          Returns the current record's "is_root" value
 * @method timestamp           getRegisteredAt()    Returns the current record's "registered_at" value
 * @method boolean             getIsEmployee()      Returns the current record's "is_employee" value
 * @method timestamp           getLastLoginAt()     Returns the current record's "last_login_at" value
 * @method integer             getFaceId()          Returns the current record's "face_id" value
 * @method Photo               getPhoto()           Returns the current record's "Photo" value
 * @method Doctrine_Collection getPosy()            Returns the current record's "Posy" collection
 * @method Doctrine_Collection getProductCategory() Returns the current record's "ProductCategory" collection
 * @method Doctrine_Collection getProduct()         Returns the current record's "Product" collection
 * @method Doctrine_Collection getFlower()          Returns the current record's "Flower" collection
 * @method Doctrine_Collection getOrders()          Returns the current record's "Orders" collection
 * @method Doctrine_Collection getForumTheme()      Returns the current record's "ForumTheme" collection
 * @method Doctrine_Collection getForumPost()       Returns the current record's "ForumPost" collection
 * @method SiteUser            setLogin()           Sets the current record's "login" value
 * @method SiteUser            setEmail()           Sets the current record's "email" value
 * @method SiteUser            setFirstname()       Sets the current record's "firstname" value
 * @method SiteUser            setLastname()        Sets the current record's "lastname" value
 * @method SiteUser            setPatronymic()      Sets the current record's "patronymic" value
 * @method SiteUser            setPersonalPhone()   Sets the current record's "personal_phone" value
 * @method SiteUser            setEmployeePhone()   Sets the current record's "employee_phone" value
 * @method SiteUser            setIsBlogger()       Sets the current record's "is_blogger" value
 * @method SiteUser            setSignature()       Sets the current record's "signature" value
 * @method SiteUser            setIsClient()        Sets the current record's "is_client" value
 * @method SiteUser            setDiscount()        Sets the current record's "discount" value
 * @method SiteUser            setPassword()        Sets the current record's "password" value
 * @method SiteUser            setIsRoot()          Sets the current record's "is_root" value
 * @method SiteUser            setRegisteredAt()    Sets the current record's "registered_at" value
 * @method SiteUser            setIsEmployee()      Sets the current record's "is_employee" value
 * @method SiteUser            setLastLoginAt()     Sets the current record's "last_login_at" value
 * @method SiteUser            setFaceId()          Sets the current record's "face_id" value
 * @method SiteUser            setPhoto()           Sets the current record's "Photo" value
 * @method SiteUser            setPosy()            Sets the current record's "Posy" collection
 * @method SiteUser            setProductCategory() Sets the current record's "ProductCategory" collection
 * @method SiteUser            setProduct()         Sets the current record's "Product" collection
 * @method SiteUser            setFlower()          Sets the current record's "Flower" collection
 * @method SiteUser            setOrders()          Sets the current record's "Orders" collection
 * @method SiteUser            setForumTheme()      Sets the current record's "ForumTheme" collection
 * @method SiteUser            setForumPost()       Sets the current record's "ForumPost" collection
 * 
 * @package    donbuket
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSiteUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('site_user');
        $this->hasColumn('login', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 30,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 100,
             ));
        $this->hasColumn('firstname', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('lastname', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('patronymic', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('personal_phone', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('employee_phone', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('is_blogger', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('signature', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_client', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('discount', 'float', null, array(
             'type' => 'float',
             'scale' => 6,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_root', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('registered_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('is_employee', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('last_login_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('face_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Photo', array(
             'local' => 'face_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Posy', array(
             'local' => 'id',
             'foreign' => 'author_id'));

        $this->hasMany('ProductCategory', array(
             'local' => 'id',
             'foreign' => 'publisher_id'));

        $this->hasMany('Product', array(
             'local' => 'id',
             'foreign' => 'publisher_id'));

        $this->hasMany('Flower', array(
             'local' => 'id',
             'foreign' => 'publisher_id'));

        $this->hasMany('Orders', array(
             'local' => 'id',
             'foreign' => 'responsible_id'));

        $this->hasMany('ForumTheme', array(
             'local' => 'id',
             'foreign' => 'author_id'));

        $this->hasMany('ForumPost', array(
             'local' => 'id',
             'foreign' => 'author_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}